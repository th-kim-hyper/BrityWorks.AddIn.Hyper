/**
*
* @libraryType JavaScript
* @id 3669b56b-eb18-4e26-83ff-ea09c189cdc2
* @createdDate 2020-05-25 16:31:51
* @lastModifiedDate 2020-05-25 16:31:51
* @createdBy archi.lee
* @lastModifiedBy archi.lee
*
* @designerVersion 1.6.500.07311
* @brief 
*  @brf 지정된 Date 값의 날짜가 포함된 주를 반환합니다.
*  @brf (Returns the week of the year that includes the date in the specified Date value.)
* @param date<String_DateTime> (ex, '2020-01-01 03:24:00')
*
*/

if(Script.JavaScript == undefined || Script.JavaScript == null) {
	Script.JavaScript = new Object();
}

if(Script.JavaScript.DATE_GetWeek == null || Script.JavaScript.DATE_GetWeek == undefined) {
	Script.JavaScript.DATE_GetWeek = function (date) {
	//Body Begin
		Date.prototype.getWeek = function (dowOffset) {
		    /*getWeek() was developed by Nick Baicoianu at MeanFreePath: http://www.meanfreepath.com */
		
		    dowOffset = typeof (dowOffset) == 'int' ? dowOffset : 0; //default dowOffset to zero
		    var newYear = new Date(this.getFullYear(), 0, 1);
		    var day = newYear.getDay() - dowOffset; //the day of week the year begins on
		    day = (day >= 0 ? day : day + 7);
		    var daynum = Math.floor((this.getTime() - newYear.getTime() -
		        (this.getTimezoneOffset() - newYear.getTimezoneOffset()) * 60000) / 86400000) + 1;
		    var weeknum;
		    //if the year starts before the middle of a week
		    if (day < 4) {
		        weeknum = Math.floor((daynum + day - 1) / 7) + 1;
		        if (weeknum > 52) {
		            nYear = new Date(this.getFullYear() + 1, 0, 1);
		            nday = nYear.getDay() - dowOffset;
		            nday = nday >= 0 ? nday : nday + 7;
		            /*if the next year starts before the middle of
		              the week, it is week #1 of that year*/
		            weeknum = nday < 4 ? 1 : 53;
		        }
		    }
		    else {
		        weeknum = Math.floor((daynum + day - 1) / 7);
		    }
		    return weeknum;
		};
		
		return new Date(date).getWeek();
	//Body End
	}
}