/**
*
* @libraryType JavaScript
* @id 674d7aff-ee57-4848-ac5d-6cb672789124
* @createdDate 2020-05-25 16:44:53
* @lastModifiedDate 2020-05-25 16:44:53
* @createdBy archi.lee
* @lastModifiedBy archi.lee
*
* @designerVersion 1.6.500.07311
* @brief 
*  @brf 지정된 문자열의 앞 또는 뒤의 문자열중 불필요한 char를 제거하여 개체를 반환한다.
*  @brf (Removes all leading and trailing occurrences of a set of characters specified in an array from the current string.)
* @param inputString<String> (ex, 'aaaHello Worldccc')
* @param trimChars<String> (ex, 'ac')
*
*/

if(Script.JavaScript == undefined || Script.JavaScript == null) {
	Script.JavaScript = new Object();
}

if(Script.JavaScript.STRING_Trim == null || Script.JavaScript.STRING_Trim == undefined) {
	Script.JavaScript.STRING_Trim = function (inputString, trimChars) {
	//Body Begin
		this.LTrim = function(str, parm) {
			parm = parm || "\\s";
		    return str.replace(new RegExp("^[" + parm + "]+", "g"), "");
		}
		
		this.RTrim = function(str, parm) {
		    parm = parm || "\\s";
		    return str.replace(new RegExp("[" + parm + "]+$", "g"), "");
		}
		
		return this.LTrim(this.RTrim(inputString, trimChars), trimChars);
	//Body End
	}
}